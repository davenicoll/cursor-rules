---
description: APPLY when CREATE A RULE, UPDATE A RULE, or user provides specific feedback to establish new rule for Cursor
globs: .cursor/rules/*.mdc
alwaysApply: false
---
# Cursor Rules Format

## Template Structure for Rule Files
```mdc
---
description: [VERB] when [SPECIFIC_TRIGGER] to [MEASURABLE_OUTCOME]
globs: .cursor/rules/**/*.mdc
alwaysApply: {true|false}
---
# Rule Title
## Context
- Specific conditions when this rule applies
- Required file types or project states
## Requirements
- Actionable items with measurable criteria
- Each requirement must specify pass/fail conditions
## Examples
<example>
Valid example demonstrating requirement compliance
</example>
<example type="invalid">
Invalid example showing specific violations
</example>
## Critical Rules
<critical>
- MUST always perform X when condition Y is met
- MUST NEVER perform Z under any circumstances
</critical>
```

## File Organization
### Location
- Path: `.cursor/rules/`
- Extension: `.mdc`

### Naming Convention
PREFIX-name.mdc where PREFIX is:
- 0XX: Core standards (00-99)
- 1XX: Tool configs (100-199)
- 3XX: Testing standards (300-399)
- 7XX: System rules (700-799)
- 8XX: Workflows (800-899)
- 9XX: Templates (900-999)
- 1XXX: Language rules (1000-1999)
- 2XXX: Framework rules (2000-2999)
- _name.mdc: Private rules

### Glob Pattern Examples
Standard patterns by rule type:
- Core standards: `.cursor/rules/*.mdc`
- Language rules: `src/**/*.{js,ts}`
- Testing standards: `**/*.test.{js,ts}`
- React components: `src/components/**/*.tsx`
- Documentation: `docs/**/*.md`
- Configuration files: `*.config.{js,json}`
- Build artifacts: `dist/**/*`
- Multiple extensions: `src/**/*.{js,jsx,ts,tsx}`
- Multiple directories: `{dist/**/*,docs/**/*.md}`

## Required Fields
### Frontmatter
- description: Must follow ACTION when TRIGGER to OUTCOME format (max 120 chars)
- globs: Standard glob pattern without quotes
- alwaysApply: Boolean value (true or false)
- dependencies: Rule file dependencies (optional)
- priority: Integer 1-10 for rule precedence (optional, default: 5)
### Body
- Context: Specific conditions and file type requirements
- Requirements: Actionable items with pass/fail criteria
- Examples: At minimum one valid example; include invalid when violations are common
- Critical Rules: Up to 10 bullet points using MUST/MUST NEVER/ALWAYS language

## Formatting Guidelines
- Use concise Markdown primarily
- XML tags limited to: `<example>`, `<example type="invalid">`, `<danger>`, `<required>`
- Always indent content within XML tags by 2 spaces
- Emojis allowed when they clarify technical concepts
- Mermaid diagrams allowed when replacing >5 lines of explanation

## Critical Rules
- Frontmatter MUST include description, globs, and alwaysApply
- Use deterministic language (MUST/MUST NEVER instead of SHOULD/TRY), no "best practice" 
- Provide specific trigger conditions (avoid "when appropriate")
- Include measurable success criteria for each requirement
- Keep rule line count under 50 (exceptions: diagrams >10 lines, examples >15 lines)
- ALWAYS include valid example; include invalid example when violations are common
- Replace non-deterministic language with specific, measurable requirements